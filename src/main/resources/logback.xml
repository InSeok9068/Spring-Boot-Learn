<?xml version="1.0" encoding="UTF-8"?>

<!-- 1) ERROR : 요청을 처리하는 중 오류가 발생한 경우 표시한다. -->
<!-- 2) WARN  : 처리 가능한 문제, 향후 시스템 에러의 원인이 될 수 있는 경고성 메시지를 나타낸다. -->
<!-- 3) INFO  : 상태변경과 같은 정보성 로그를 표시한다. -->
<!-- 4) DEBUG : 프로그램을 디버깅하기 위한 정보를 표시한다.  -->
<!-- 5) TRACE : 추적 레벨은 Debug보다 훨씬 상세한 정보를 나타낸다.  -->

<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{yyyyMMdd HH:mm:ss.SSS} [%thread] %-3level %logger{5} - %msg %n</pattern>
    </encoder>
  </appender>
  
  <!-- jdbc.sqlonly : SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다.  -->
  <!-- jdbc.sqltiming : SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다.  -->
  <!-- jdbc.audit : ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다.  -->
  <!-- jdbc.resultset : ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.  -->
  <!-- jdbc.resultsettable : SQL 결과 조회된 데이터의 table을 로그로 남긴다.  -->
  
  <logger name="jdbc" level="OFF"/>
 
  <logger name="jdbc.sqlonly" level="DEBUG"/>
  <logger name="jdbc.sqltiming" level="OFF"/>
  <logger name="jdbc.audit" level="OFF"/>
  <logger name="jdbc.resultset" level="OFF"/>
  <logger name="jdbc.resultsettable" level="OFF"/>
  <logger name="jdbc.connection" level="OFF"/>
  
  <root level="INFO">
    <appender-ref ref="STDOUT" />
  </root>
  
</configuration>
